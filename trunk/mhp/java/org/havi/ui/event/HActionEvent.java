
package org.havi.ui.event;

import org.havi.ui.*;

/*An HActionEvent event is used to interact with a component implementing the HActionInputPreferred interface as follows: 
" An HActionEvent event may be sent from the HAVi system to the component to cause the component to become actioned. " 
An HActionEvent event is sent from the component to all registered HActionListener whenever the component is actioned. 
All interoperable HAVi components which expect to receive HActionEvent events must implement the HActionInputPreferred 
interface. */

public class HActionEvent extends java.awt.event.ActionEvent {

/*
Constructs an HActionEvent . Parameters: source -The HActionable component which has been actioned. id -The event id of 
the HActionEvent generated by the HActionable component.This is the value that will be returned by the event object's 
getID method. command -A String which is used as the action command string for this 
event. */
public HActionEvent(HActionable source, int id, java.lang.String command) {
   super((Object)source, id, command);
}

/*
Retrieve the action command string associated with this event. Overrides: java.awt.event.ActionEvent.getActionCommand()in 
class java.awt.event.ActionEvent Returns: the String which was used as the action command string when this event was 
constructed. */
public java.lang.String getActionCommand() {
   return super.getActionCommand();
}

/*
Returns any modi  ers held down during this action event. Modi  ers are not used with the HAVi platform.Interoperable 
HAVi applications shall not use the return value of this method. Overrides: java.awt.event.ActionEvent.getModi  ers()in 
class java.awt.event.ActionEvent Returns: an implementation-speci  c value. */
public int getModifiers() {
   return super.getModifiers();
}


}
