
package org.havi.ui.event;

import org.havi.ui.HAdjustmentValue;
/*An HAdjustmentEvent event is used to interact with a component implementing the 
HAdjustmentValue interface as follows: " An HAdjustmentEvent event may be sent from the 
HAVi system to the component to cause a change to the value or editable mode of the 
component as a result of user interaction. For example, this event may be gen-erated by a 
virtual keyboard user interface on a platform which lacks suitable adjustment keys. " An 
HAdjustmentEvent event is sent from the component to all registered HAdjustmentListener 
when a change to the value or editable mode of the component occurs. All interoperable 
HAVi components which expect to receive HAdjustmentEvent events should also implement the 
HAdjustmentInputPreferred interface.The parameters to the constructors are as follows,in 
cases where parameters are not used,then the constructor should use the default 
values. */

public class HAdjustmentEvent extends java.awt.AWTEvent {

/*
An adjustment event with this id is sent whenever the value of an HAdjustmentValue component is decreased by one unit. 
See Also: setUnitIncrement(int),getUnitIncrement() */
public static final int ADJUST_LESS = 2001;


/*
An adjustment event with this id is sent whenever the value of an HAdjustmentValue component is increased by one 
unit. */
public static final int ADJUST_MORE = 2002;


/*
An adjustment event with this id is sent whenever the value of an HAdjustmentValue component is decreased by one 
block. */
public static final int ADJUST_PAGE_LESS = 2003;


/*
An adjustment change event with this id is sent whenever the value of an HAdjustmentValue component is increased by one 
block. */
public static final int ADJUST_PAGE_MORE = 2004;


/*
An adjustment event with this id indicates that the value of an HAdjustmentValue component has been  nally set.This 
event is sent when the user causes the component to leave its editable mode. Note that it is a platform speci  c 
implementation option for such components to leave editable mode automatically e.g.when they lose input focus.In such a 
case the order in which the HFocusEvent and HAdjustmentEvent are sent is platform speci  c. See Also: 
getAdjustMode() */
public static final int ADJUST_END_CHANGE = 2005;


/*
An adjustment event with this id indicates that the value of an HAdjustmentValue component may be about to change.This 
event is sent when the user causes the component to enter its editable mode.Note that it is a platform speci  c 
implementation option for such components to enter editable mode automatically e.g.when they receive input focus.In such 
a case the order in which the HFocusEvent and HAdjustmentEvent are sent is platform speci  
c. */
public static final int ADJUST_START_CHANGE = 2000;


/*
The  rst integer id in the range of event ids supported by the HAdjustmentEvent class. */
public static final int ADJUST_FIRST = 2000;


/*
The last integer id in the range of event ids supported by the HAdjustmentEvent class. */
public static final int ADJUST_LAST = 2005;


/*
Constructs an HAdjustmentEvent . Parameters: source -The HAdjustmentValue component whose value has been modi  ed. id 
-The event id of the HAdjustmentEvent generated by the HAdjustmentValue component.This is the value that will be 
returned by the event object's getID method. */
public HAdjustmentEvent(HAdjustmentValue source, int id) {
   super(source, id);
}


}
