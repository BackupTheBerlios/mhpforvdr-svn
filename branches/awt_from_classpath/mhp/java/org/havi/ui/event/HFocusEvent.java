
package org.havi.ui.event;

/*An HFocusEvent event is used to interact with a component implementing the 
HNavigationInputPreferred interface as follows: " An HFocusEvent event may be sent from 
the HAVi system to the component to inform the component that it has gained or lost the 
input focus, or that it should transfer focus to another component. " An HFocusEvent event 
is sent from the component to all registered HFocusListener listeners when-ever the 
component focus status changes or focus is transferred to another component. Note that 
because the underlying focus mechanism is based on AWT,focus transfer events do not 
guarantee that another component will actually get focus,or that the current component 
will lose focus. All interoperable HAVi components which expect to receive HFocusEvent 
events must implement the HNavigationInputPreferred interface. */


//TODO: I do not understand the meaning of tranferId, but this is not important I think.

public class HFocusEvent extends java.awt.event.FocusEvent {

/*
An event id which indicates that the component should transfer focus to the component identi  ed by the data returned 
from the getTransferId()method. If a component matching the data cannot be found the component receiving this event 
should do nothing and not send an event to any registered HFocusListener listeners. */
public static final int FOCUS_TRANSFER = 2025;


/*
A constant returned from the getTransferId()method if the event id is not FOCUS_TRANSFER 
. */
public static final int NO_TRANSFER_ID = -1;


/*
The  rst integer id in the range of event ids supported by the HFocusEvent class. */
public static final int HFOCUS_FIRST = 2025;


/*
The last integer id in the range of event ids supported by the HFocusEvent class. */
public static final int HFOCUS_LAST = 2025;


/*
Constructs an HFocusEvent . Parameters: source -The java.awt.Component component which originated this event. id -The 
event id of the HFocusEvent generated by the HNavigable component.This is the value that will be returned by the event 
object's getID method. */
public HFocusEvent(java.awt.Component source, int id) {
   super(source, id);
   transferId=0;
}

protected int transferId;

/*
Constructs an HFocusEvent . Parameters: source -The java.awt.Component component which originated this event. id -The 
event id of the HFocusEvent generated by the HNavigable component.This is the value that will be returned by the event 
object's getID method. transfer -a key which maps to the component to transfer focus to,if the id parameter has the 
value FOCUS_TRANSFER .If the id parameter does not have this value NO_TRANSFER_ID is substituted for its 
value. */
public HFocusEvent(java.awt.Component source, int id, int transfer) {
   super(source, id);
   transferId=transfer;
}

/*
Returns a key which maps to the component to transfer focus to. Returns: a key which maps to the component to transfer 
focus to,or NO_TRANSFER_ID if the id of this event is not FOCUS_TRANSFER . The return value of this function is used to 
pass key codes to an HNavigable to implement focus transfer for HAVi UI components. */
public int getTransferId() {
   return ( getID() != FOCUS_TRANSFER ? NO_TRANSFER_ID : transferId);
}

/*
Returns whether or not this focus change event is a temporary change. Overrides: 
java.awt.event.FocusEvent.isTemporary()in class java.awt.event.FocusEvent Returns: an implementation speci  c value.The 
HAVi UI does not use temporary focus events and interoperable applications shall not call this 
method. */
public boolean isTemporary() {
   return super.isTemporary();
}


}
